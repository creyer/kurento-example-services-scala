<?xml version="1.0"?>
<configuration>
  <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/main.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- Daily rollover with compression -->
      <fileNamePattern>websocket-server-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- keep 30 days worth of history -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} - [%level] - from %logger in %thread %n%message%n%xException%n</pattern>
    </encoder>
  </appender>

  <!-- CrowdDetector Logger Config -->
  <appender name="CROWD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/crowddetector.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover with compression -->
      <fileNamePattern>crowddetector-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- keep 1 week worth of history -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} %message%n</pattern>
      <!-- this quadruples logging throughput -->
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>
  <appender name="CROWD_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/crowddetector.error.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover with compression -->
      <fileNamePattern>crowddetector-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- keep 1 week worth of history -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} %message%n</pattern>
      <!-- this quadruples logging throughput -->
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>

  <!-- One2One Logger Config -->
  <appender name="ONE2ONE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/crowddetector.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover with compression -->
      <fileNamePattern>one2one-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- keep 1 week worth of history -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} %message%n</pattern>
      <!-- this quadruples logging throughput -->
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>
  <appender name="ONE2ONE_ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>logs/crowddetector.error.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover with compression -->
      <fileNamePattern>one2one-log-%d{yyyy-MM-dd}.gz</fileNamePattern>
      <!-- keep 1 week worth of history -->
      <maxHistory>7</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
    <encoder>
      <pattern>%date{yyyy-MM-dd HH:mm:ss ZZZZ} %message%n</pattern>
      <!-- this quadruples logging throughput -->
      <immediateFlush>false</immediateFlush>
    </encoder>
  </appender>

  <!-- CrowdDetector logger -->
  <!-- additivity=false ensures access log data only goes to the access log -->
  <logger name="crowddetector" level="INFO" additivity="false">
    <appender-ref ref="CROWD_FILE" />
  </logger>
  <logger name="crowddetector" level="ERROR" additivity="false">
    <appender-ref ref="CROWD_ERROR_FILE" />
  </logger>

  <!-- One2One logger -->
  <!-- additivity=false ensures access log data only goes to the access log -->
  <logger name="one2one" level="INFO" additivity="false">
    <appender-ref ref="ONE2ONE_FILE" />
  </logger>
  <logger name="one2one" level="ERROR" additivity="false">
    <appender-ref ref="ONE2ONE_ERROR_FILE" />
  </logger>

  <root level="INFO">
    <appender-ref ref="FILE"/>
  </root>
</configuration>
